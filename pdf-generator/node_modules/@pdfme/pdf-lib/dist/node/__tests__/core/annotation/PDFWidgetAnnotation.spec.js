"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = require("../../../src/index");
describe(`PDFWidgetAnnotation`, () => {
    it(`returns undefined for missing (DAs)`, () => {
        const context = index_1.PDFContext.create();
        const parentRef = context.nextRef();
        const widget = index_1.PDFWidgetAnnotation.create(context, parentRef);
        widget.dict.set(index_1.PDFName.of('DA'), index_1.PDFNull);
        expect(widget.getDefaultAppearance()).toBe(undefined);
    });
    it(`returns normal direct appearance strings (DAs)`, () => {
        const context = index_1.PDFContext.create();
        const parentRef = context.nextRef();
        const widget = index_1.PDFWidgetAnnotation.create(context, parentRef);
        widget.dict.set(index_1.PDFName.of('DA'), index_1.PDFString.of('/ZaDb 10 Tf 0 g'));
        expect(widget.getDefaultAppearance()).toBe('/ZaDb 10 Tf 0 g');
    });
    it(`returns hexadecimal (non-standard) direct appearance strings (DAs)`, () => {
        const context = index_1.PDFContext.create();
        const parentRef = context.nextRef();
        const widget = index_1.PDFWidgetAnnotation.create(context, parentRef);
        widget.dict.set(index_1.PDFName.of('DA'), index_1.PDFHexString.fromText('/ZaDb 10 Tf 0 g'));
        expect(widget.getDefaultAppearance()).toBe('/ZaDb 10 Tf 0 g');
    });
});
//# sourceMappingURL=PDFWidgetAnnotation.spec.js.map